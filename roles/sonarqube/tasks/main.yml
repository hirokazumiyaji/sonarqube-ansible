---

- name: install unzip
  yum:
    name: unzip
    state: present
  become: yes

- name: create group
  group:
    name: "{{ sonarqube_group }}"
    state: present
  become: yes

- name: create user
  user:
    name: "{{ sonarqube_user }}"
    group: "{{ sonarqube_group }}"
    state: present
  become: yes

- name: check exists
  stat:
    path: /opt/sonarqube
  register: sonarqube

- name: donwload
  get_url:
    url: "https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonarqube_version }}.zip"
    dest: "/tmp/sonarqube-{{ sonarqube_version }}.zip"
  when: not sonarqube.stat.exists

- name: unzip
  unarchive:
    src: "/tmp/sonarqube-{{ sonarqube_version }}.zip"
    dest: /opt
    remote_src: yes
  when: not sonarqube.stat.exists
  become: yes

- name: move directory
  command: mv /opt/sonarqube-{{ sonarqube_version }} /opt/sonarqube
  when: not sonarqube.stat.exists
  become: yes

- name:
  file:
    path: /opt/sonarqube
    owner: "{{ sonarqube_user }}"
    group: "{{ sonarqube_group }}"
    recurse: yes
    mode: 0755
  become: yes

- name: change max map count
  sysctl:
    name: vm.max_map_count
    value: 262144
    state: present
  become: yes

- name: systemd
  template:
    src: etc/systemd/system/sonar.service.j2
    dest: /etc/systemd/system/sonar.service
  become: yes

- name: conf
  copy:
    src: opt/sonarqube/conf/wrapper.conf
    dest: /opt/sonarqube/conf/wrapper.conf
    owner: "{{ sonarqube_user }}"
    group: "{{ sonarqube_group }}"
  become: yes

- name: properties
  template:
    src: opt/sonarqube/conf/sonar.properties.j2
    dest: /opt/sonarqube/conf/sonar.properties
    owner: "{{ sonarqube_user }}"
    group: "{{ sonarqube_group }}"
  become: yes

- name: start
  systemd:
    name: sonar.service
    state: restarted
    daemon-reload: yes
    enabled: yes
  become: yes
